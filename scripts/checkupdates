#!/bin/sh
#
# Copyright (C) 2023 Jonathan Sanfilippo <jonathansanfilippo.uk@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.



# URL
RPV="$HOME/.config/archmain/scripts/repocheckversion"
ICON="$HOME/.config/archmain/icons/icon.png"
list="$HOME/.config/archmain/data/console.json"
python="$HOME/.config/archmain/archmain.py"
splash="$HOME/.config/archmain/splash.py"
chSet="$HOME/.config/archmain/data/checkSet.json"
delay="$HOME/.config/archmain/data/delay.json"

sleep 10
$splash

# Variabili cmd
DELAY=$( expr "$(cat $delay)" \* 60)
CHECK=$( expr "$(cat $chSet)" \* 60) 
get_updates(){
   # AUR=$(yes no | pikaur -Su | tail -n +8 | head -n -3)
     AUR=$(pikaur -Qua)
     Pacman=$(checkupdates 2>/dev/null)
    Pending=$(expr "$(pikaur -Qqua | wc -l)" + "$(checkupdates 2>/dev/null | wc -l)")
}



write_updates(){
    if [ "$Pending" -eq 1 ]; then
        echo "$Pending Update" > "$list"
        echo ""  >> "$list"
        echo "$AUR" >> "$list"
        echo ""  >> "$list"
        echo "$Pacman"  >> "$list"

ACTION=$(notify-send -i "$ICON" --action="OPEN" --action="DELAY"  -a "Archmain" "$Pending Update available."   -u critical;  )
                case "$ACTION" in
                      "0")
                         $python
                         ;;
                      "1")
                         sleep "$DELAY"
                         ;;
                      
                esac

    elif [ "$Pending" -ge 1 ]; then
        echo "$Pending Updates" > "$list"
        echo ""  >> "$list"
        echo "$AUR" >> "$list"
        echo ""  >> "$list"
        echo "$Pacman"  >> "$list"

        

ACTION=$(notify-send -i "$ICON" --action="OPEN" --action="DELAY"  -a "Archmain" "$Pending Updates available."   -u critical;  )
                case "$ACTION" in
                      "0")
                         $python
                         ;;
                      "1")
                         sleep "$DELAY"
                         ;;
                      
                esac

    else
        echo "System Updated" > "$list"
        echo "last check at $(date +'%F %T')" >> "$list"
        $RPV
    fi
}

while true; do
    get_updates
    write_updates
    sleep "$CHECK"
    get_updates
done
