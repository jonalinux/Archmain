#!/bin/sh
#
# Copyright (C) 2023 Jonathan Sanfilippo <jonathansanfilippo.uk@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.


# URL

list="$HOME/.config/archmain/data/console.json"
urltemp="$HOME/.config/archmain/data/temp.json"
last="$HOME/.config/archmain/data/last.json"
lastTemp="$HOME/.config/archmain/data/temp2.json"
ignore=$(cat "$HOME/.config/archmain/data/ignore.json")
ign="$HOME/.config/archmain/data/ignore.json"
n="$HOME/.config/archmain/data/n.json"


# Variabili cmd

get_updates(){
     AUR=$(pikaur -Qua)
     Pacman=$(checkupdates 2>/dev/null)
    Pending=$(expr $(pikaur -Qqua | wc -l) + $(checkupdates 2>/dev/null | wc -l))
}

get_updates
    echo "$Pending" > "$n"
    if [ "$Pending" -eq 1 ]; then
        echo "$Pending Update" > "$list"
        echo -n "$Pending Update" > "$n"
        echo ""  >> "$list"
        echo "$Pacman"  >> "$list"
        echo "${AUR// +/ }" | cut -c 2- >> "$list"

    elif [ "$Pending" -ge 1 ]; then
        echo "$Pending Updates" > "$list"
        echo -n "$Pending Updates" > "$n"
        echo ""  >> "$list"
        echo "$Pacman"  >> "$list"
        echo "${AUR// +/ }" | cut -c 2- >> "$list"
    else
        echo "System Updated" > "$list"
        echo -n "System Updated" > "$n"
        echo "last check at $(date +'%F %T')" >> "$list"
    fi


if [ -s "$urltemp" ]
then
cat "$last"  > "$lastTemp"
cat "$urltemp" > "$last"
cat "$lastTemp" >> "$last"
echo -n "" > "$urltemp"
else
  echo ""
  # do something if file is empty
fi

if [ -s "$ign" ]
then
  echo "" >> "$last"
  echo "Packages that were ignored by the user:" >> "$last"
  echo "" >> "$last"
  echo "$ignore" >> "$last"
else
  echo ""
  # do something if file is empty
fi
